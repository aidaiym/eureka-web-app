version: '3.10'

services:
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
      args:
        DJANGO_ALLOWED_HOSTS: 127.0.0.1
        DJANGO_SECRET_KEY: 'django-insecure-@^t&x53&z156^5u!!4pz_-q1jad^b_1^++p*dj)z(8yiapbkkn'
        DJANGO_CORS_ORIGIN_WHITELIST: http://127.0.0.1
    command: gunicorn --chdir config config.wsgi:application --reload --bind 0.0.0.0:8000
    volumes:
      - ./backend/:/code/
    ports:
      - "8000:8000"
    expose:
      - 8000
    env_file:
      - backend/.env.dev
    depends_on:
      - db
    restart: always

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgresdb
      - "POSTGRES_HOST_AUTH_METHOD=trust"

volumes:
  postgres_data:


# version: '3'

# services:
#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     ports:
#       - 8000:8000
#     environment:
#       - DATABASE_URL=postgres://user:password@db:5432/dbname
#     depends_on:
#       - db

#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     ports:
#       - 3000:3000
#     environment:
#       - REACT_APP_BACKEND_URL=http://backend:8000

#   db:
#     image: postgres
#     environment:
#       - POSTGRES_USER=user
#       - POSTGRES_PASSWORD=password
#       - POSTGRES_DB=dbname
